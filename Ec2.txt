##AWS-Version
terraform {
  required_providers {
    aws = "~>3.37.0"
    
  }
} 

##PROVIDER 
provider "aws" {
  region = var.aws_region
  assume_role {
    role_arn     =  var.role_arn
    session_name = var.session_name
    # external_id  = "EXTERNAL_ID"
  }
}
#CREATES A KEY TO MY COMPUTER
resource "tls_private_key" "neo_private" {
    algorithm = "RSA"
    rsa_bits = 4096

    provisioner "local-exec" {
    command = "echo '${tls_private_key.neo_private.private_key_pem}' > ./neo-ec2-anaylticsBatch-ssh.pem"
  }
}


##CREATES A KEY TO AWS
resource "aws_key_pair" "neo_key" {
    key_name = var.key_name
    public_key = var.public_key
}

##DATA SOURCE BLOCK TO CALL THE SPECIFIED AMI
data "aws_ami" "neo_ec2" {
   owners = var.owners
   
   filter {
    name = "tag:Name"
    values = var.owner_tag
  }
   
    filter {
    name = "name"
    values = var.ownertag1
    }

    filter {
      name = "virtualization-type"
      values = [ "hvm" ]
    } 
}
 
 ##RESOURCE BLOCK FOR INSTANCE PROFILE

data "aws_iam_instance_profile" "neo_profile" {
  name = var.ec2_role
 ##role_name =  "${aws_iam_role.ec2_role.name}"
}

## DATA BLOCK FOR VPC
  data  "aws_vpc" "vpc"{
  filter {
    name = "tag:Name"
    values = var.vpc_id
  }
}
##DATA BLOCK FOR PRIVATE SUBNET IN US-EAST-1A
 data "aws_subnet" "private1" {
  filter {
    name   = "tag:Name"
    values = var.subnet_id
  }
}
##DATA BLOCK FOR SECURITY GROUP
 data "aws_security_group" "selected" {
    name = var.security_group_id
}

 ##RESOURCE BLOCK FOR EC2-INSTANCE 
 resource "aws_instance" "EC2-xyz" {
     ami = data.aws_ami.neo_ec2.id
     subnet_id  = data.aws_subnet.private1.id
     availability_zone = "${var.aws_region}${var.aws_region_az}" 
     instance_type = "t3.medium"
     key_name = var.key_name
     vpc_security_group_ids = [data.aws_security_group.selected.id]
     iam_instance_profile = "${data.aws_iam_instance_profile.neo_profile.name}"

  
 }

 resource "aws_ebs_volume" "neo_volume" {
     availability_zone = var.aws_region1
     size = 20
 }

data "aws_s3_bucket" "S3bucket" {
   bucket = var.s3_bucket
    
}
 resource "aws_s3_bucket_object" "key-s3" {
   bucket = var.S3_bucket
   key = var.key_path
   source = var.key_path
   
 }
